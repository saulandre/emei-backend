
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  isVerified: 'isVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  verificationCode: 'verificationCode',
  verificationCodeExpiration: 'verificationCodeExpiration',
  lastVerificationRequest: 'lastVerificationRequest',
  role: 'role',
  comunicacaocomejaca: 'comunicacaocomejaca',
  comunicacaomovimento: 'comunicacaomovimento',
  telefone: 'telefone',
  resetTokenVersion: 'resetTokenVersion'
};

exports.Prisma.InstituicaoEspiritaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  nome_CNPJ: 'nome_CNPJ',
  estado: 'estado',
  cidade: 'cidade',
  bairro: 'bairro',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  telefone: 'telefone',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  criadoPorId: 'criadoPorId',
  sigla: 'sigla',
  CEU: 'CEU',
  dia: 'dia',
  horario: 'horario',
  atualizadoPorId: 'atualizadoPorId',
  CNPJ: 'CNPJ'
};

exports.Prisma.Participante2025ScalarFieldEnum = {
  id: 'id',
  nomeCompleto: 'nomeCompleto',
  nomeCracha: 'nomeCracha',
  cpf: 'cpf',
  nomeSocial: 'nomeSocial',
  dataNascimento: 'dataNascimento',
  sexo: 'sexo',
  email: 'email',
  telefone: 'telefone',
  nomeCompletoResponsavel: 'nomeCompletoResponsavel',
  documentoResponsavel: 'documentoResponsavel',
  telefoneResponsavel: 'telefoneResponsavel',
  linkPagamento: 'linkPagamento',
  idade: 'idade',
  valor: 'valor',
  statusPagamento: 'statusPagamento',
  tipoParticipacao: 'tipoParticipacao',
  comissao: 'comissao',
  tamanhoCamisa: 'tamanhoCamisa',
  cep: 'cep',
  estado: 'estado',
  cidade: 'cidade',
  bairro: 'bairro',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  outroGenero: 'outroGenero',
  medicacao: 'medicacao',
  alergia: 'alergia',
  outrasInformacoes: 'outrasInformacoes',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  IE: 'IE',
  instituicaoId: 'instituicaoId',
  vegetariano: 'vegetariano',
  camisa: 'camisa',
  primeiraComejaca: 'primeiraComejaca',
  deficienciaAuditiva: 'deficienciaAuditiva',
  deficienciaAutismo: 'deficienciaAutismo',
  deficienciaIntelectual: 'deficienciaIntelectual',
  deficienciaParalisiaCerebral: 'deficienciaParalisiaCerebral',
  deficienciaVisual: 'deficienciaVisual',
  deficienciaFisica: 'deficienciaFisica',
  deficienciaOutra: 'deficienciaOutra',
  deficienciaOutraDescricao: 'deficienciaOutraDescricao',
  otherInstitution: 'otherInstitution'
};

exports.Prisma.PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userId: 'userId',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  user: 'user',
  admin: 'admin'
};

exports.TipoParticipacao = exports.$Enums.TipoParticipacao = {
  Confraternista: 'Confraternista',
  Trabalhador: 'Trabalhador'
};

exports.Prisma.ModelName = {
  Users: 'Users',
  InstituicaoEspirita: 'InstituicaoEspirita',
  Participante2025: 'Participante2025',
  PasswordResetToken: 'PasswordResetToken'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
